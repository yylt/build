name: kata

on:
  push:
    branches: [ kata ]

permissions: # added using https://github.com/step-security/secure-workflows
  contents: write

env:
  GO111MODULE: on 
  PROJECT: kata-containers
  BRANCH: stable-2.5
  RUSTUP_DIST_SERVER: "https://mirrors.ustc.edu.cn/rust-static"
  RUSTUP_UPDATE_ROOT: "https://mirrors.ustc.edu.cn/rust-static/rustup"
  REGISTRY_NAME: ghcr.yylt.gq

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
        - self-hosted
        - ubuntu-22.04
    steps:
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.77.2
        override: true

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Set up Go 1.22
      uses: actions/setup-go@v4
      with:
        go-version: 1.22

    - name: Check out repo code
      uses: actions/checkout@v2

    - name: Check out build code
      uses: actions/checkout@v2
      with:
        repository: easystack/kata-containers
        ref: ${{ env.BRANCH }}
        token: ${{ secrets.KPULL }}  
        path: ${{ env.PROJECT }}

    - name: Set up Docker Buildx
      if: matrix.os != 'self-hosted'
      uses: docker/setup-buildx-action@v2

    - name: Login to Ghcr Hub
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_NAME }}
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.GHCR_PASSWORD }}

    - name: Build image
      run: |
        cd ${{ env.PROJECT }}/ecr_deploy
        make -f ../../kata-image/kata-image.mk all
      env:
        REGISTRY_NAME: ${{ env.REGISTRY_NAME }}
        IMAGE_TAG: ${{ steps.date.outputs.date }}
        DEBUG: true

  notify:
    name: notify 
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    needs: [build]

    steps:
    - name: WeChat Work notification
      shell: bash
      env:
        WEBHOOK: ${{ secrets.WEWORK_ECRGROUP_BUILD }}
      run: |
        data="{\"msgtype\":\"text\",\"text\":{\"content\":\"ecr_deploy 编译完成, 见 https://github.com/yylt?tab=packages\"}}"
        curl ${WEBHOOK} -H 'Content-Type: application/json' -d "$data"
