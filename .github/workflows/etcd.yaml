name: etcd

permissions:
  contents: read

on:
  push:
    branches: [ etcd ]
  workflow_dispatch:
    inputs:
      version:
        description: 'etcd version'
        required: true
        default: 'v3.5.15'
      arm:
        description: 'build&push arm64 image'
        required: false
        default: 'on'
      amd:
        description: 'build&push amd64 image'
        required: false
        default: 'on'
env:
  Dockerfile: Dockerfile-etcd
  DefaultV: "v3.5.16"
  REGISTRY_GCR: "gcr.io"  #gcr.io
  REGISTRY_NAME: "${{ secrets.MY_HUB_NAME }}"
  REGISTRY_USER: "${{ secrets.MY_HUB_USER }}"
  REGISTRY_PASS: "${{ secrets.MY_HUB_PASSWORD }}"

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04 #[self-hosted, linux, x64]
    steps:
    - name: Get current date
      id: date
      run: |
        echo "date=$(date +'%Y%m%d%H%M')" >> "$GITHUB_ENV"

     # commit sha is used for image tag
    - name: Getting image tag
      id: tag
      run: |
        set -x
        echo "trigger by ${{ github.event_name }}"
        echo "sha256 is ${{ github.sha }}"

        if ${{ github.event_name == 'workflow_dispatch' }} ; then
            echo "tag=${{ github.event.inputs.version }}"  >> $GITHUB_ENV
            echo "arm=${{ github.event.inputs.arm }}"  >> $GITHUB_ENV
            echo "amd=${{ github.event.inputs.amd }}"  >> $GITHUB_ENV
        else
            echo "tag=${{ env.DefaultV }}" >> $GITHUB_ENV
            echo "arm=on" >> $GITHUB_ENV
            echo "amd=on" >> $GITHUB_ENV
        fi

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Check out repo code
      uses: actions/checkout@v4

    - name: Docker Registry Login
      shell: bash
      run: |
        buildah login -u ${{ env.REGISTRY_USER }} -p ${{ env.REGISTRY_PASS }} ${{ env.REGISTRY_NAME }}

    - name: Docker Image(amd64) Build And Push
      if: ${{ contains( env.amd, 'on') }}
      shell: bash
      run: |
        # amd64
        image_repo=${{ env.REGISTRY_NAME }}/captain/etcd:${{ env.tag }}
        image_repo2=${{ env.REGISTRY_NAME }}/production/etcd:${{ env.tag }}
        buildah bud --no-cache --platform linux/amd64 \
          --build-arg BASE_IMAGE=${{ env.REGISTRY_GCR }}/etcd-development/etcd:${{ env.tag }} \
          -t $image_repo \
          -t $image_repo2 \
          -f ./${{ env.Dockerfile }} .
        buildah push $image_repo
        buildah push $image_repo2


    - name: Docker Image(arm64) Build And Push
      if: ${{ contains( env.arm, 'on') }}
      shell: bash
      run: |
        # arm64
        image_repo=${{ env.REGISTRY_NAME }}/arm64v8/etcd:${{ env.tag }}
        buildah bud --no-cache --platform linux/arm64 \
          --build-arg BASE_IMAGE=${{ env.REGISTRY_GCR }}/etcd-development/etcd:${{ env.tag }} \
          -t $image_repo \
          --build-arg TARGETARCH=arm64 \
          -f ./${{ env.Dockerfile }} .
        buildah push $image_repo

