name: tool
permissions:
  contents: write

on:
  push:
    branches: [ tool ]

env:
  Dockerfile: Dockerfile-tool
  GO111MODULE: on
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Check out repo code
      uses: actions/checkout@v2


    - name: Check out build code1
      uses: actions/checkout@v2
      with:
        repository: airshipit/kubernetes-entrypoint
        ref: master
        path: entrypoint


    - name: Check out build code2
      uses: actions/checkout@v2
      with:
        repository: belitre/gotpl
        ref: master
        path: gotpl


    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set up Go 
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20'

    - name: install arm tools
      run: |
        sudo apt-get update && sudo apt-get install -y crossbuild-essential-arm64

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build gotpl (push)
      run: |
        cd gotpl
        go mod tidy
        GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o gotpl_amd64
        GOARCH=arm64 CGO_ENABLED=0 go build -ldflags '-w -s' -o gotpl_arm64

    - name: Build kubernetes-entrypoint (push)
      run: |
        cd entrypoint
        make get-modules
        GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' -o kubernetes-entrypoint_amd64
        GOARCH=arm64 CGO_ENABLED=0 go build -ldflags '-w -s' -o kubernetes-entrypoint_arm64


    - name: Docker Buildx (push)
      run: |
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform linux/arm64,linux/amd64 \
          --output "type=image,push=true" \
          --tag yylt/tool:${{ steps.date.outputs.date }} \
          --file ./${{ env.Dockerfile }} ./
