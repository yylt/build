name: kiali
permissions:
  contents: read
on:
  push:
    branches: [ kiali ]


env:
  GO111MODULE: on 
  GOPATH: /opt
  REPO: yylt/kiali
  PROJECT: kiali
  BRANCH: sigterm
  Dockerfile: Dockerfile-kiali

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Check out repo code
      uses: actions/checkout@v4

    - name: Check out build code1
      uses: actions/checkout@v4
      with:
        repository: ${{ env.REPO }}
        ref: ${{ env.BRANCH }}
        path: ${{ env.PROJECT }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.9.1

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: "14"
        cache: yarn
        cache-dependency-path: ${{ env.PROJECT }}/frontend/yarn.lock

    - name: install arm tools
      run: |
        sudo apt-get update && sudo apt-get install -y crossbuild-essential-arm64

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '^1.20'
        cache: true
        cache-dependency-path: go.sum

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build binary
      run: |
        cd ${{ env.PROJECT }}
        tree -L 2 frontend
        make build-ui
        tree -L 2 frontend
        cp -fr frontend/build ./console
        mkdir -p ${GOPATH}/bin
        make -e TARGET_ARCHS="amd64 arm64" build-linux-multi-arch
        cp -fr ${GOPATH}/bin/kiali* ./ 


    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Docker Buildx (push)
      run: |
        cd ${{ env.PROJECT }}
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform linux/amd64,linux/arm64 \
          --output "type=image,push=true" \
          --tag yylt/kiali:${{ steps.date.outputs.date }} \
          --file ../${{ env.Dockerfile }} ./

