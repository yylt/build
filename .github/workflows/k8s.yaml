name: kubernetes

on:
  push:
    branches: [ k8s ]

env:
  REPO: easystack/kubernetes
  PROJECT: kubernetes
  BRANCH: v1.27.6-es
  Dockerfile: Dockerfile-k8s

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Set up Go 
      uses: actions/setup-go@v4
      with:
        go-version: '^1.21'

    - name: install arm tools
      run: |
        sudo apt-get update && sudo apt-get install -y crossbuild-essential-arm64
        
    - name: Check out repo code
      uses: actions/checkout@v2

    - name: Check out build code
      uses: actions/checkout@v2
      with:
        repository: ${{ env.REPO }}
        ref: ${{ env.BRANCH }}
        token: ${{ secrets.KPULL }}  
        path: ${{ env.PROJECT }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.5.1

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx
        
    - name: Build binary
      run: |
        cd ${{ env.PROJECT }}
        export KUBE_GIT_COMMIT=""
        export KUBE_GIT_VERSION=${{ env.BRANCH }}

        export KUBE_BUILD_PLATFORMS=linux/arm64
        make kube-apiserver kubelet kube-proxy kube-controller-manager kube-scheduler kubectl cloud-controller-manager

        # export KUBE_BUILD_PLATFORMS=linux/amd64
        # make kube-apiserver kubelet kube-proxy kube-controller-manager kube-scheduler kubectl cloud-controller-manager
        tree _output

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Docker Buildx image (push)
      run: |
        cd ${{ env.PROJECT }}
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform linux/arm64 \
          --output "type=image,push=true" \
          --tag yylt/hyperkube:${{ steps.date.outputs.date }} \
          --file ../${{ env.Dockerfile }} .
