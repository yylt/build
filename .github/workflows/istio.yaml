name: istio

on:
  push:
    branches: [ istio ]

env:
  PROJECT: istio
  BRANCH: 1.18.0
  Dockerfile: Dockerfile-istio
  Dockerfile2: Dockerfile-istiod
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

    - name: Check out repo code
      uses: actions/checkout@v2

    - name: Check out build code
      uses: actions/checkout@v2
      with:
        repository: istio/${{ env.PROJECT }}
        ref: ${{ env.BRANCH }}
        path: ${{ env.PROJECT }}

    - uses: actions/setup-go@v4
      name: Set up golang
      with:
        go-version: '^1.20'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1.5.1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Cache Docker layers
      uses: actions/cache@v2
      id: cache
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx

    - name: build istio binary
      run: |
        cd ${{ env.PROJECT }}
        TARGET_ARCH=amd64 TARGET_OUT_LINUX=linux/amd64 make build-linux
        TARGET_ARCH=arm64 TARGET_OUT_LINUX=linux/arm64 make build-linux
        find . -name "*envoy_bootstrap*" -exec cp {} out/ \;
        # mkdir -p out/linux
        # cp out/linux_amd64 out/linux/amd64 -a
        # cp out/linux_arm64 out/linux/arm64 -a
        tree out

    - name: Docker Buildx istio proxy (push)
      run: |
        cd ${{ env.PROJECT }}
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform linux/amd64,linux/arm64 \
          --output "type=image,push=true" \
          --build-arg "VERSION=${{ env.BRANCH }}" \
          --tag yylt/proxyv2:${{ steps.date.outputs.date }} \
          --file ../${{ env.Dockerfile }} ./out

    - name: Docker Buildx istiod (push)
      run: |
        cd ${{ env.PROJECT }}
        docker buildx build \
          --cache-from "type=local,src=/tmp/.buildx-cache" \
          --platform linux/amd64,linux/arm64 \
          --output "type=image,push=true" \
          --tag yylt/pilot:${{ steps.date.outputs.date }} \
          --file ../${{ env.Dockerfile2 }} ./out